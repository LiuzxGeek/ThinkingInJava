package com.java.thinking.alto;

import org.apache.commons.codec.binary.Base64;

public class Test {

	final static String VALUE = "5pSA56SA5KiA5qiA5oiA44iA5YiA5rCA5KSA5qiA5ryA55yA5LCA5IyA5KiA54CA5oiA5rSA5aiA55iA5KSA5qiA54CA45yA5KSA5riA5IiA54yA5aSA5aCA5YiA5rSA5oiA44yA5KiA55CA5KSA5qiA5ryA56CA5LCA5IyA5KiA5rSA5aSA5ZyA5LiA5rCA5KSA5qiA5ryA5qSA5oSA5KCA5YiA44CA5oyA5JCA5ryA55iA5LCA44yA5LiA44CA5aSA5aCA5YiA54CA5aSA56SA45SA56CA5oSA5ZyA5LiA5ryA5aiA5ZyA5LiA5ryA5aSA5ZyA46SA56SA5aiA5ZyA45CA55SA5aSA44iA46SA55CA5LCA44yA5ZiA55yA5oiA5JyA46SA5qCA5aiA5IyA46SA5qCA5oyA5KCA5ISA55iA5LSA5qiA5ISA56CA5LiA5YyA46CA55yA5LyA5YyA46SA54CA5oiA5ZyA5pCA5piA5LiA5qSA45SA55yA5oiA5rSA5oyA5qSA5LCA5IyA5KiA55yA5oSA5JyA46SA55SA5aiA5YyA5KSA45iA5KSA5qiA5JSA56iA5LSA56iA5pyA45CA5LSA5JCA5ZSA45CA5LyA5JCA5JSA55yA5KSA5qSA55yA5qSA5oyA5rSA5rCA56iA5oSA44CA56CA5rCA5pCA5rSA5ZiA54yA5KSA5qiA5ryA56SA5LCA5IyA5KiA44SA5oyA44iA5ZiA56SA5oiA5rSA5JiA55CA5aiA5YyA5KSA45iA5KSA5qiA5JSA56iA5LSA56iA5pyA45CA5LSA5JCA5ZSA45CA5LyA5JCA5JSA55yA5KSA5qSA55yA5qSA5oyA44iA5ZiA56iA5oyA44iA5rCA55iA5oiA5qyA5rCA5qyA5KSA5qiA5ryA5qSA5aSA5ZyA5KiA5qiA5aiA5JyA5LiA5qyA5aiA5ZCA5pCA5rCA5LSA5JyA5JiA5rSA5LiA5JCA5rCA5qiA5LiA5ZCA5rCA5qCA5aSA56iA5YSA44yA5LiA44iA5aSA44CA5aSA5qiA5JSA55yA5LiA5qiA5rCA5qiA5LiA5ZCA5LSA5qSA5LCA5IyA5KiA44SA5oyA44iA5ZiA56SA5YyA5ZyA5YSA5qSA5LyA5qSA5KSA56CA5LSA5ZCA5aSA56SA5LyA5ZCA5YSA56CA5LiA56iA5oyA5qSA5LCA5IyA5KiA5riA5aiA5ZyA45SA5qyA5aiA5aCA5KSA5qSA5LyA5qSA44CA56CA5LCA5IyA5KiA55iA5oyA5JyA5ZiA55SA5YyA5ZyA5YSA5qSA5LyA5qSA5KiA5qiA5ZiA44CA45SA54SA5aSA44iA55yA45CA5pSA5JSA44SA5ZSA5ZyA5aCA5rCA5YCA5ZiA5JiA5JiA45CA5ZCA5riA54CA5qiA5YCA5YyA5KiA46SA5LCA5IyA5KiA55CA5oyA44iA5oyA5qSA5LyA5qSA5LCA5rSA5qSA5KiA5JCA5rCA5qSA54CA46CA5qSA5LCA5IyA5KiA44CA5oyA5rSA5JiA5qiA5aiA5ZSA5rCA5qyA5KSA5qiA5ryA5qSA5oyA44yA5ZiA55yA5aiA5aCA5KiA5qCA5oyA5JyA5rCA55yA5oiA5KCA5ZiA56iA5LyA5rCA5YSA55yA5pCA44yA5oyA44CA5ZCA5ZiA5pCA56CA5oiA5JSA5ZiA5riA5ZyA5JCA5JiA5LyA5ZSA5KCA5LSA56CA5LiA44yA5IiA54yA5oyA44CA5JiA5qyA5aiA5ZCA5LSA44SA5LyA5ZCA5ZSA55yA5KSA5riA44CA47SA";

	public static void main(String[] args) {
		String plain = new String(Base64.decodeBase64(VALUE.getBytes()));
		plain = mixResult(plain);
		plain = new String(Base64.decodeBase64(plain.getBytes()));
		System.out.println(plain);
	}

	public static String mixResult(final String result) {
		char[] chs = result.toCharArray();
		for (int i = 0; i < chs.length; i++) {
			chs[i] = (char) ((chs[i] << 8 & 0xff00) | chs[i] >> 8);
		}
		return new String(chs);
	}
}